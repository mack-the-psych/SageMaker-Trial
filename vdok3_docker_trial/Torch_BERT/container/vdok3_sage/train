#!/usr/bin/env python

from __future__ import print_function

import os
import pickle
import sys
import traceback

from torch_bert_classify import tmv_torch_bert_classify

csv_dump = True
# epochs = 10
epochs = 1
dependent_var = r'Definition-Score'
task_word = r'Definition'
number_class = 3
key_word = 'TORCH_BERT-Def-PRE-All'

# These are the paths to where SageMaker mounts interesting things in your container.

prefix = '/opt/ml/'

input_path = prefix + 'input/data'
output_path = os.path.join(prefix, 'output')
model_path = os.path.join(prefix, 'model')
model_path += '/'

# This algorithm has a single channel of input data called 'training'. Since we run in
# File mode, the input files are copied to the directory specified here.
channel_name='training'
training_path = os.path.join(input_path, channel_name)
training_path += '/'

# The function to execute the training.
def train(data_file):
    print('Starting the training.')
    try:    
        bertd = tmv_torch_bert_classify(training_path, '/opt/program/vdok3/train/pytorch_advanced/nlp_sentiment_bert/')
        bertd.load_data(data_file, dependent_var, [0, 1], task_word)
        bertd.perform_modeling(bertd.df_ac_modeling_values, key_word, csv_dump, number_class, epochs)
        bertd.perform_prediction(bertd.df_ac_modeling_values, number_class)
        bertd.evaluate_prediction(key_word)

        print('Training complete.')
    except Exception as e:
        # Write out an error file. This will be returned as the failureReason in the
        # DescribeTrainingJob result.
        trc = traceback.format_exc()
        with open(os.path.join(output_path, 'failure'), 'w') as s:
            s.write('Exception during training: ' + str(e) + '\n' + trc)
        # Printing this causes the exception to be in the training job logs, as well.
        print('Exception during training: ' + str(e) + '\n' + trc, file=sys.stderr)
        # A non-zero exit code causes the training job to be marked as Failed.
        sys.exit(255)

if __name__ == '__main__':
    train('Serialized-Def-ELVA.PILOT.PRE-TEST.csv')

    # A zero exit code causes the job to be marked a Succeeded.
    sys.exit(0)
