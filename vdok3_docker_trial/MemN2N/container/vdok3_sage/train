#!/usr/bin/env python

from __future__ import print_function

import os
import pickle
import sys
import traceback

from tf_memn_classify import tmv_tf_memn_classify

number_data_set = 4
csv_dump = True
batch_size = 100
epochs = 20

dependent_var = r'Definition-Score'
task_word = r'Definition'
number_class = 3

# These are the paths to where SageMaker mounts interesting things in your container.

prefix = '/opt/ml/'

input_path = prefix + 'input/data'
output_path = os.path.join(prefix, 'output')
model_path = os.path.join(prefix, 'model')

# This algorithm has a single channel of input data called 'training'. Since we run in
# File mode, the input files are copied to the directory specified here.
channel_name='training'
training_path = os.path.join(input_path, channel_name)
training_path += '/'

# The function to execute the training.
def train(data_file):
    print('Starting the training.')
    try:
        memnd = tmv_tf_memn_classify(training_path)
        memnd.load_data(data_file, dependent_var, [0, 1], 
                        task_word)
        memnd.iloc_split_for_cross_validation(number_data_set = number_data_set)
        memnd.modeling_prediction_evaluation_all(r'TF_MEMN-Def-PRE-POST-All', csv_dump, 
                                                 number_class, epochs, batch_size)

        # save the model
        with open(os.path.join(model_path, 'vdok3_memn2n.pkl'), 'wb') as out:
            pickle.dump(memnd, out)
        print('Training complete.')
    except Exception as e:
        # Write out an error file. This will be returned as the failureReason in the
        # DescribeTrainingJob result.
        trc = traceback.format_exc()
        with open(os.path.join(output_path, 'failure'), 'w') as s:
            s.write('Exception during training: ' + str(e) + '\n' + trc)
        # Printing this causes the exception to be in the training job logs, as well.
        print('Exception during training: ' + str(e) + '\n' + trc, file=sys.stderr)
        # A non-zero exit code causes the training job to be marked as Failed.
        sys.exit(255)

if __name__ == '__main__':
    train('Serialized-Def-ELVA.PILOT.PRE-POST-TEST.csv')

    # A zero exit code causes the job to be marked a Succeeded.
    sys.exit(0)
